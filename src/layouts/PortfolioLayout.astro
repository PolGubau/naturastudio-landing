---
import Contact from "@components/Contact/Contact.astro";
import PortfolioImage from "@components/PorfolioImage/PortfolioImage.astro";
import PortfolioGrid from "@components/Portfolio/PortfolioGrid.astro";
import TestimonialQuote from "@components/Testimonials/TestimonialQuote.astro";
import { Image } from "astro:assets";
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "./BaseLayout.astro";

interface Props {
	portfolio: CollectionEntry<"sessions">;
}

const { portfolio } = Astro.props as Props;
const { title, content, images, price, heroImage, cta, id } = portfolio.data;

// find other portfolios to show later down the page
const otherPortfolios = await getCollection("sessions", (otherPortfolio) => {
	// filter out draft pages
	return otherPortfolio.data.draft !== true && otherPortfolio.id !== portfolio.id;
});
---

<BaseLayout
	type="general"
	title={title}
	description={`Pack que incluye ${content.join(", ")} por solo ${price}€.`}
	heroImage={heroImage}
	navStartStyle="white"
>
	<div class="relative h-[40svh] w-full overflow-hidden md:h-[60svh]">
		<div class="from-primary-900 absolute inset-0 z-10 bg-gradient-to-b"></div>
		<div class="from-primary-100 absolute inset-0 z-10 bg-gradient-to-t"></div>

		<Image
			src={heroImage}
			alt="Portfolio header"
			class="absolute inset-0 h-full w-full object-cover object-center md:hidden"
			width={600}
			densities={[1.5, 2]}
			loading="eager"
		/>

		<Image
			src={heroImage}
			alt="Portfolio header"
			class="absolute inset-0 h-full w-full object-cover object-center max-md:hidden"
			width={1920}
			densities={[1.5, 2]}
			loading="eager"
		/>
	</div>

	<article class="mx-auto mt-12 space-y-6 px-4 md:max-w-6xl">
		<h1 class="h1 description mt-4 text-center uppercase">
			{title}
		</h1>

		<!-- hero image -->
		<div class="mt-6 h-auto max-h-[50vh] w-full overflow-hidden md:max-h-[80vh]">
			<Image
				src={heroImage}
				alt={`cover for ${title}`}
				width={1120}
				quality="high"
				densities={[1.5, 2]}
				class="h-auto min-h-full w-full min-w-full object-cover"
				transition:name={`portfolio-image-${portfolio.id}`}
			/>
		</div>

		<!-- people and location -->
		<h2
			class="h2 text-primary-500 mt-10 flex flex-col items-center justify-center gap-x-3 gap-y-1 tracking-widest md:flex-row"
		>
			{title}
		</h2>
		<div
			class="bg-notebook font-heading mx-auto flex w-fit flex-col gap-6 p-8 py-10 pr-20 pl-16 text-3xl"
		>
			<span class="text-primary-500">Incluye:</span>
			<ul>
				{content.map((item) => <li class="list-inside list-decimal text-2xl">{item}</li>)}
			</ul>

			<span class="font-heading text-primary-600 text-4xl">{price}€</span>

			<a href={`/inicio/#contact?pack=${id}`} class="">
				<button
					class="text-primary-800 hover:text-primary-600 font-heading hover:decoration-primary-500 px-3 py-1 underline decoration-wavy underline-offset-8 transition-all"
					>{cta}</button
				>
			</a>
		</div>

		<!-- slot really only fuctions as a longer description -->
		<div class="description mt-6 text-center text-pretty md:text-lg">
			<slot />
		</div>

		<!-- portfolio images -->
		<div class="mx-auto mt-12 max-w-5xl space-y-6 md:mt-20 md:space-y-16">
			{
				images.map((imageGroup) => (
					<div
						class:list={[
							"mb-6 grid gap-6 md:gap-16",
							{
								"grid-cols-1": imageGroup.length === 1,
								"grid-cols-2": imageGroup.length === 2,
								"grid-cols-3": imageGroup.length === 3,
							},
						]}
					>
						{imageGroup.map((image) => (
							<PortfolioImage image={image} numCols={imageGroup.length} />
						))}
					</div>
				))
			}
		</div>
	</article>

	<TestimonialQuote />

	<section class="mx-auto mt-12 px-4 md:mt-16 md:max-w-5xl">
		<h3 class="h2 text-center">Otros packs</h3>
		<PortfolioGrid portfolios={otherPortfolios} />
	</section>
	<Contact class="mt-12" />
</BaseLayout>

<style>
	.bg-notebook {
		background-image: url("/src/assets/images/notebook.webp");
		background-size: contain;
		background-repeat: no-repeat;
	}
</style>
